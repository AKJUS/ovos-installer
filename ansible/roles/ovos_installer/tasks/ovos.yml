---
- name: Create directories
  ansible.builtin.file:
    path: "{{ item.directory }}"
    owner: "{{ ovos_installer_user }}"
    group: "{{ ovos_installer_user }}"
    mode: '0755'
    state: directory
  loop:
    - {"directory": "{{ ovos_installer_user_home }}/.config/systemd/user", "status": true}
    - {"directory": "{{ ovos_installer_user_home }}/ovos", "status": true}
    - {"directory": "{{ ovos_installer_user_home }}/ovos/config", "status": true}
    - {"directory": "{{ ovos_installer_user_home }}/ovos/share", "status": true}
    - {"directory": "{{ ovos_installer_user_home }}/ovos/tmp", "status": true}
    - {"directory": "{{ ovos_installer_user_home }}/hivemind", "status": "{{ 'false' if ovos_installer_profile == 'ovos' else 'true' }}"}
    - {"directory": "{{ ovos_installer_user_home }}/hivemind/config", "status": "{{ 'false' if ovos_installer_profile == 'ovos' else 'true' }}"}
    - {"directory": "{{ ovos_installer_user_home }}/hivemind/share", "status": "{{ 'false' if ovos_installer_profile == 'ovos' else 'true' }}"}
  when:
    - item.status | bool
    - ovos_installer_method == "containers"

- name: Create directories
  ansible.builtin.file:
    path: "{{ item.directory }}"
    owner: "{{ ovos_installer_user }}"
    group: "{{ ovos_installer_user }}"
    mode: '0755'
    state: directory
  loop:
    - {"directory": "{{ ovos_installer_user_home }}/.config/mycroft", "status": true}
    - {"directory": "{{ ovos_installer_user_home }}/.config/systemd/user", "status": true}
    - {"directory": "{{ ovos_installer_user_home }}/stdout", "status": true}
    - {"directory": "{{ ovos_installer_user_home }}/nltk_data", "status": true}
  when:
    - item.status | bool
    - ovos_installer_method == "virtualenv"

- name: Generate mycroft.conf
  vars:
    _configuration_path: "{{ '.config/mycroft' if ovos_installer_method == 'virtualenv' else 'ovos/config' }}"
  ansible.builtin.template:
    src: mycroft.conf.j2
    dest: "{{ ovos_installer_user_home }}/{{ _configuration_path }}/mycroft.conf"
    owner: "{{ ovos_installer_user }}"
    group: "{{ ovos_installer_user }}"
    mode: '0600'
    backup: true
  register: _configuration
