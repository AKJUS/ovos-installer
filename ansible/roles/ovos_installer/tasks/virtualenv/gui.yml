---
- name: Install package requirements for ovos-gui
  ansible.builtin.apt:
    name:
      - cmake
      - gettext
      - pkg-kde-tools
      - qtbase5-dev
      - qtdeclarative5-dev
      - libkf5kio-dev
      - libqt5websockets5-dev
      - libkf5i18n-dev
      - libkf5notifications-dev
      - libkf5plasma-dev
      - libqt5webview5-dev
      - qtmultimedia5-dev
      - kdeconnect
      - kirigami2-dev
      - libkf5dbusaddons-dev
      - libqt5webview5
      - libkf5configcore5
      - qml-module-qtwebengine
      - qml-module-qtmultimedia
      - qml-module-qtquick-shapes
      - qtvirtualkeyboard-plugin
      - libqt5multimedia5
      - libqt5virtualkeyboard5
      - breeze-icon-them
  when: ansible_os_family in ['Debian', 'Zorin OS']

- name: Install package requirements for ovos-gui
  ansible.builtin.dnf:
    name:
      - cmake
      - gettext
      - qmltermwidget
      - qt5-qtwebsockets-devel
      - qt5-qtdeclarative-devel
      - qt5-qtmultimedia-devel
      - qt5-qtwebview-devel
      - qt5-qtwebengine
      - qt5-qtmultimedia
      - qt5-qtvirtualkeyboard
      - qtermwidget
      - kde-connect
      - kf5-kio-devel
      - kf5-knotifications-devel
      - kf5-ki18n-devel
      - kf5-plasma-devel
      - kf5-kconfig-core
      - kf5-kdbusaddons-devel
      - kf5-kirigami2-devel
      - kf5-kiconthemes
      - kf5-kiconthemes-devel
      - kf5-kguiaddons-devel
      - breeze-icon-them
  when: ansible_os_family == "RedHat"

- name: Install package requirements for ovos-gui
  community.general.zypper:
    name:
      - cmake
      - extra-cmake-modules
      - gettext-runtime
      - qmltermwidget
      - libqt5-qtwebsockets-devel
      - libqt5-qtdeclarative-devel
      - libqt5-qtmultimedia-devel
      - libqt5-qtwebview-devel
      - libqt5-qtwebengine
      - libqt5-qtmultimedia-devel
      - libqt5-qtvirtualkeyboard
      - qtermwidget-qt5-data
      - kdeconnect-kde
      - kio-devel
      - kio-extras5
      - libKF5Notifications5
      - libQt5QuickControls2-devel
      - libKF5I18n5
      - libKF5Plasma5
      - kconfig-devel
      - kdbusaddons-devel
      - kirigami2-devel
      - kiconthemes-devel
      - kguiaddons-devel
      - libqt5-qtbase-devel
      - ki18n-devel
      - plasma-framework-devel
      - kf6-breeze-icons
  when: ansible_os_family == "Suse"

- name: Install package requirements for ovos-gui
  community.general.pacman:
    name:
      - cmake
      - extra-cmake-modules
      - gettext
      - plasma-framework5
      - kio5
      - qmltermwidget
      - qt5-websockets
      - qt5-declarative
      - qt5-multimedia
      - qt5-webview
      - qt5-webengine
      - qt5-virtualkeyboard
      - qtermwidget
      - kdeconnect
      - kirigami2
      - ki18n5
      - kconfig5
      - kdbusaddons5
      - kiconthemes5
      - kguiaddons5
      - breeze-icons
  when: ansible_os_family == "Archlinux"

- name: Clone GUI repositories
  ansible.builtin.git:
    repo: "{{ item.url }}"
    dest: "{{ item.dest }}"
    version: "{{ item.branch }}"
  loop:
    - { "url": "https://github.com/OpenVoiceOS/mycroft-gui-qt5.git", "dest": "/opt/mycroft-gui", "branch": "dev" }
    - { "url": "https://github.com/OpenVoiceOS/ovos-shell.git", "dest": "/opt/ovos-shell", "branch": "master" }
    - { "url": "https://github.com/kbroulik/lottie-qml.git", "dest": "/opt/lottie", "branch": "master" }

- name: Create GUI directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: "0755"
    state: directory
  loop:
    - /opt/mycroft-gui/build-testing
    - /opt/ovos-shell/build-testing
    - /opt/lottie/build-testing

- name: Compile GUI components
  ansible.builtin.shell:
    cmd: |
      cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DKDE_INSTALL_LIBDIR=lib -DKDE_INSTALL_USE_QT_SYS_PATHS=ON
      make -j {{ ansible_processor_vcpus - 1 }}
      make install
    executable: /bin/bash
    chdir: "{{ item }}"
    creates: "{{ ovos_installer_user_home }}/.config/systemd/user/ovos-gui.service"
  loop:
    - /opt/mycroft-gui/build-testing
    - /opt/ovos-shell/build-testing
    - /opt/lottie/build-testing

- name: Delete GUI directories once compiled
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /opt/mycroft-gui
    - /opt/ovos-shell
    - /opt/lottie

- name: Remove GUI components
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /usr/bin/ovos-shell
    - /usr/bin/ovos-gui-app
    - /usr/share/applications/ovos-shell.desktop
    - /usr/share/applications/ai.ovos.gui-app.desktop
    - /usr/share/OVOS
    - /usr/lib64/qt5/qml/org/kde/lottie
    - /usr/lib/aarch64-linux-gnu/qt5/qml/org/kde/lottie
    - /usr/lib/aarch64-linux-gnu/qt5/qml/Mycroft
    - /usr/lib/aarch64-linux-gnu/qt5/qml/OVOSPlugin
    - "{{ ovos_installer_user_home }}/.config/ovos-eglfs.json"
    - "{{ ovos_installer_user_home }}/.cache/mycroft.gui"
  when: ovos_installer_cleaning | bool
  tags:
    - uninstall
