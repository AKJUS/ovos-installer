---
- name: Install PipeWire with ALSA support
  vars:
    # Debian Unstable hack
    _distribution_version: "{{ '99' if ansible_distribution == 'Debian' and ansible_distribution_version == 'n/a' else ansible_distribution_version }}"
  ansible.builtin.package:
    name:
      - pipewire
      - pipewire-alsa
      - alsa-utils
  when: not (ansible_distribution == 'Ubuntu' and _distribution_version is version('23.04', '<=') or
        ansible_distribution == 'Debian' and _distribution_version is version('12.0', '<='))

- name: Install PulseAudio on older Debian and Ubuntu versions
  vars:
    # Debian Unstable hack
    _distribution_version: "{{ '99' if ansible_distribution == 'Debian' and ansible_distribution_version == 'n/a' else ansible_distribution_version }}"
  ansible.builtin.package:
    name:
      - pulseaudio
      - alsa-utils
  when: (ansible_distribution == 'Ubuntu' and _distribution_version is version('23.04', '<=') or
        ansible_distribution == 'Debian' and _distribution_version is version('12.0', '<='))

- name: Add {{ ovos_installer_user }} to audio group
  ansible.builtin.user:
    name: "{{ ovos_installer_user }}"
    groups: audio
    append: true

- name: Add {{ ovos_installer_user }} to pipewire group
  vars:
    # Debian Unstable hack
    _distribution_version: "{{ '99' if ansible_distribution == 'Debian' and ansible_distribution_version == 'n/a' else ansible_distribution_version }}"
  ansible.builtin.user:
    name: "{{ ovos_installer_user }}"
    groups:
      - pipewire
      - rtkit
    append: true
  when: not (ansible_distribution == 'Ubuntu' and _distribution_version is version('23.04', '<=') or
        ansible_distribution == 'Debian' and _distribution_version is version('12.0', '<='))

- name: Enable lingering for {{ ovos_installer_user }}
  ansible.builtin.file:
    path: "/var/lib/systemd/linger/{{ ovos_installer_user }}"
    owner: root
    group: root
    mode: "0644"
    modification_time: preserve
    access_time: preserve
    state: touch
  notify: Start Sound Server

- name: Flush handlers sound
  ansible.builtin.meta: flush_handlers

- name: Re-detect sound server
  ansible.builtin.shell:
    cmd: |
      if pgrep -x "pipewire-pulse$" &>/dev/null || pgrep -x "pulseaudio$" &>/dev/null; then
        echo "pulseaudio"
      elif pgrep -x "pipewire$" &>/dev/null; then
        echo "pipewire"
      else
        if [[ "{{ ansible_kernel }}" =~ "microsoft" ]]; then
          echo "pulseaudio"
        else
          echo "n/a"
        fi
      fi
    executable: /bin/bash
  register: _detect_sound_server
  changed_when: false
